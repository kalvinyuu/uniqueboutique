(undo-tree-save-format-version . 1)
"bbe5f345632eb633281153d6d1ea66126e133cb8"
[nil nil nil nil (26481 27786 206201 0) 0 nil]
([nil nil ((#("import { Roles } from \"@/../types/globals\"
import { auth } from \"@clerk/nextjs/server\"
 
export const checkRole = (role: Roles) => {
  const { sessionClaims } = auth()
 
  return sessionClaims?.metadata.role === role;
}" 0 6 (face font-lock-keyword-face fontified t) 6 17 (fontified t) 17 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 42 (face font-lock-string-face fontified t) 42 43 (fontified t) 43 49 (face font-lock-keyword-face fontified t) 49 59 (fontified t) 59 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 86 (face font-lock-string-face fontified t) 86 89 (fontified t) 89 95 (face font-lock-keyword-face fontified t) 95 96 (fontified t) 96 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 111 (face font-lock-variable-name-face fontified t) 111 115 (fontified t) 115 119 (face font-lock-variable-name-face fontified t) 119 121 (fontified t) 121 126 (face font-lock-type-face fontified t) 126 128 (fontified t) 128 130 (face font-lock-keyword-face fontified t) 130 131 (fontified t) 131 135 (font-lock-multiline t fontified t) 135 140 (font-lock-multiline t face font-lock-keyword-face fontified t) 140 161 (font-lock-multiline t fontified t) 161 165 (face font-lock-function-name-face font-lock-multiline t fontified t) 165 172 (font-lock-multiline t fontified t) 172 178 (font-lock-multiline t face font-lock-keyword-face fontified t) 178 219 (font-lock-multiline t fontified t)) . 1) (undo-tree-id0 . -219) (undo-tree-id1 . -162) (undo-tree-id2 . -162) (undo-tree-id3 . -162) (undo-tree-id4 . -201) (undo-tree-id5 . -219) (undo-tree-id6 . -219) (undo-tree-id7 . -152) (undo-tree-id8 . -219) (t 26372 24655 826414 460000)) nil (26481 27786 206199 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 224 . 225) (nil fontified nil 1 . 225) (1 . 225)) nil (26481 27786 206179 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -26) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -28) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -29) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -30) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -31) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -32) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -33) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -34) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -35) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -36) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -37) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -38) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 39 (t 26481 27786 207591 927000)) nil (26504 43418 277487 0) 0 nil])
([nil nil ((25 . 26)) nil (26504 43418 277454 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 26) nil (26504 43418 277453 0) 0 nil])
([nil nil ((25 . 28)) nil (26504 43418 277451 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 28) nil (26504 43418 277450 0) 0 nil])
([nil nil ((27 . 28)) nil (26504 43418 277449 0) 0 nil])
([nil nil ((#("@" 0 1 (face font-lock-string-face fontified t)) . -24) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -26) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 28) nil (26504 43418 277448 0) 0 nil])
([nil nil ((24 . 27)) nil (26504 43418 277441 0) 0 nil])
([nil nil ((27 . 29)) nil (26504 43418 277440 0) 0 nil])
([nil nil ((29 . 30)) nil (26504 43418 277440 0) 0 nil])
([nil nil ((27 . 32) (#("typ" 0 3 (face font-lock-string-face fontified t)) . -27) (undo-tree-id0 . -2) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) 30) nil (26504 43418 277438 0) 0 nil])
([nil nil ((32 . 33)) nil (26504 43418 277423 0) 0 nil])
([nil current ((33 . 40)) nil (26504 43418 277420 0) 0 nil])
nil
