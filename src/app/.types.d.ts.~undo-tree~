(undo-tree-save-format-version . 1)
"40ed804534a2384f076a306dd8d20c640489d929"
[nil nil nil nil (26454 33616 234226 0) 0 nil]
([nil nil ((#("i" 0 1 (font-lock-multiline t fontified t)) . -100) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("n" 0 1 (font-lock-multiline t fontified t)) . -101) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("g" 0 1 (font-lock-multiline t face typescript-primitive-face fontified t)) . -102) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 103 (t 26381 44482 191937 115000)) nil (26454 33616 234224 0) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-multiline t fontified t)) . -97) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("t" 0 1 (font-lock-multiline t fontified t)) . -98) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -99) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 100) nil (26454 33616 234199 0) 0 nil])
([nil nil ((97 . 103)) nil (26456 16328 666315 0) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-multiline t fontified t)) . -1437) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("t" 0 1 (font-lock-multiline t fontified t)) . -1438) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -1439) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("i" 0 1 (font-lock-multiline t fontified t)) . -1440) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("n" 0 1 (font-lock-multiline t fontified t)) . -1441) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("g" 0 1 (font-lock-multiline t face typescript-primitive-face fontified t)) . -1442) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 1443 (t 26456 16331 917682 798000)) nil (26456 18482 836288 0) 0 nil] [nil nil ((#("[" 0 1 (fontified t)) . -1786) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (#("]" 0 1 (fontified t)) . -1787) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) 1788 (t 26454 33616 237449 776000)) ((1786 . 1788) (t 26456 16298 98117 697000)) (26456 16298 96060 0) 0 nil])
([nil nil ((1437 . 1443)) nil (26456 18482 836256 0) 0 nil])
nil
([nil nil ((#("O" 0 1 (font-lock-multiline t fontified t)) . -1463) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("r" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1464) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("d" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1465) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("e" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1466) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("r" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1467) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("S" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1468) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("t" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1469) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("a" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1470) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("t" 0 1 (font-lock-multiline t face font-lock-type-face fontified t)) . -1471) (undo-tree-id78 . -1) 1472 (t 26456 18482 839197 102000)) nil (26456 18671 798 0) 0 nil])
([nil nil ((1463 . 1469)) nil (26456 18671 778 0) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-multiline t fontified t)) . -160) (undo-tree-id78 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -161) (undo-tree-id79 . -1) 162 (t 26456 18671 4369 253000)) nil (26486 54020 697850 0) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-multiline t fontified t)) . -156) (undo-tree-id74 . -1) (#("m" 0 1 (font-lock-multiline t fontified t)) . -157) (undo-tree-id75 . -1) (#("a" 0 1 (font-lock-multiline t fontified t)) . -158) (undo-tree-id76 . -1) (#("g" 0 1 (font-lock-multiline t fontified t)) . -159) (undo-tree-id77 . -1) 160) nil (26486 54020 697848 0) 0 nil])
([nil nil ((156 . 157)) nil (26486 54020 697845 0) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-multiline t fontified t)) . -251) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("i" 0 1 (font-lock-multiline t fontified t)) . -252) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("z" 0 1 (font-lock-multiline t fontified t)) . -253) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -254) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -255) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 256) nil (26486 54020 697844 0) 0 nil])
([nil nil ((251 . 252)) nil (26486 54020 697836 0) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-multiline t fontified t)) . -312) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("o" 0 1 (font-lock-multiline t fontified t)) . -313) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("l" 0 1 (font-lock-multiline t fontified t)) . -314) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("o" 0 1 (font-lock-multiline t fontified t)) . -315) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("u" 0 1 (font-lock-multiline t fontified t)) . -316) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -317) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -318) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 319) nil (26486 54020 697835 0) 0 nil])
([nil nil ((312 . 313)) nil (26486 54020 697827 0) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-multiline t fontified t)) . -375) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("i" 0 1 (font-lock-multiline t fontified t)) . -376) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("b" 0 1 (font-lock-multiline t fontified t)) . -377) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("b" 0 1 (font-lock-multiline t fontified t)) . -378) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("o" 0 1 (font-lock-multiline t fontified t)) . -379) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("n" 0 1 (font-lock-multiline t fontified t)) . -380) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -381) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 382) nil (26486 54020 697826 0) 0 nil])
([nil nil ((375 . 376)) nil (26486 54020 697818 0) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-multiline t fontified t)) . -1672) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -1673) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("d" 0 1 (font-lock-multiline t fontified t)) . -1674) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -1675) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -1676) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -1677) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("t" 0 1 (font-lock-multiline t fontified t)) . -1678) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -1679) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("m" 0 1 (font-lock-multiline t fontified t)) . -1680) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -1681) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 1682) nil (26486 54020 697817 0) 0 nil])
([nil nil ((1672 . 1673)) nil (26486 54020 697806 0) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-multiline t fontified t)) . -1787) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("d" 0 1 (font-lock-multiline t fontified t)) . -1788) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("d" 0 1 (font-lock-multiline t fontified t)) . -1789) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -1790) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -1791) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("s" 0 1 (font-lock-multiline t fontified t)) . -1792) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("s" 0 1 (font-lock-multiline t fontified t)) . -1793) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -1794) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1795) nil (26486 54020 697803 0) 0 nil])
([nil nil ((1787 . 1788)) nil (26486 54020 697782 0) 0 nil])
([nil nil ((#("L" 0 1 (font-lock-multiline t fontified t)) . -68) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("o" 0 1 (font-lock-multiline t fontified t)) . -69) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("c" 0 1 (font-lock-multiline t fontified t)) . -70) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("a" 0 1 (font-lock-multiline t fontified t)) . -71) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("t" 0 1 (font-lock-multiline t fontified t)) . -72) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("i" 0 1 (font-lock-multiline t fontified t)) . -73) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("o" 0 1 (font-lock-multiline t fontified t)) . -74) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("n" 0 1 (font-lock-multiline t fontified t)) . -75) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 76 (t 26486 54020 701769 917000)) nil (26490 57843 989554 0) 0 nil])
([nil nil ((275 . 276) (t 26490 57843 992723 901000)) nil (26490 57895 987278 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -275) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 276) nil (26490 57895 987275 0) 0 nil])
([nil current ((68 . 76) (t 26490 57895 989720 37000)) nil (26503 58303 503295 0) 0 nil])
nil
