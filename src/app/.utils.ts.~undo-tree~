(undo-tree-save-format-version . 1)
"db596ccd34108040bcf9fdba6687234f65e9b43f"
[nil nil nil nil (26456 16321 912006 0) 0 nil]
([nil nil ((1637 . 1638) (t 26454 10139 318692 251000)) nil (26456 16321 912005 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1637) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1638) nil (26456 16321 912002 0) 0 nil])
([nil nil ((1637 . 1638) (t 26456 16321 914365 25000)) nil (26456 16340 306539 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1637) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1638) nil (26456 16340 306535 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2208) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -2209) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("P" 0 1 (fontified t)) . -2210) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2211) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -2212) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("m" 0 1 (face font-lock-type-face fontified t)) . -2213) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2214) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -2215) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -2216) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("<" 0 1 (fontified t)) . -2217) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("O" 0 1 (face font-lock-type-face fontified t)) . -2218) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2219) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -2220) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -2221) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2222) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -2223) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("[" 0 1 (fontified t)) . -2224) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("]" 0 1 (fontified t)) . -2225) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#(">" 0 1 (fontified t)) . -2226) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 2227 (t 26456 16340 307944 573000)) nil (26456 16449 398568 0) 0 nil])
([nil nil ((2208 . 2210)) nil (26456 16449 398467 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -2208) (undo-tree-id4 . -1) (#("s" 0 1 (fontified t)) . -2209) (undo-tree-id5 . -1) 2210) nil (26456 16449 398463 0) 0 nil])
([nil nil ((#(": Promise<Orders[]>" 0 2 (fontified t) 2 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 16 (face font-lock-type-face fontified t) 16 19 (fontified t)) . 1964) (undo-tree-id163 . -19) (undo-tree-id164 . -19) (undo-tree-id165 . -19) (undo-tree-id166 . -19) (undo-tree-id167 . -19) (t 26456 16449 400543 466000)) nil (26456 16454 367295 0) 0 nil])
([nil nil ((#(": Promise<Orders[]>" 0 2 (fontified t) 2 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 16 (face font-lock-type-face fontified t) 16 19 (fontified t)) . 1672) (undo-tree-id168 . -19) (undo-tree-id169 . -19) (t 26456 16454 368551 9000)) nil (26456 16461 655035 0) 0 nil])
([nil nil ((#(": Promise<OrderItems>" 0 2 (fontified t) 2 9 (face font-lock-type-face fontified t) 9 10 (fontified t) 10 20 (face font-lock-type-face fontified t) 20 21 (fontified t)) . 1414) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (t 26456 16461 656596 515000)) nil (26456 16469 147862 0) 0 nil])
([nil nil ((#("import { productCatalouge, colour, ribbon, mensSize, womansSize, kidsSize, images, users, orders, orderItems, addresses, specificItem} from '@/db/schema'; 
import  { db }  from \"@/db/index\";
import { eq } from 'drizzle-orm';
import { Size, Ribbon, Product, Images, Orders, Addresses, OrderItems, SpecificItem, OrderStat } from \"@/app/types\";
import {User} from \"@/app/zod\"
import {z} from \"zod\"

export async function authManage(email: string | null = null, name: string | null = null, authId: string) {

    const existingUser = await db.select().from(users)
        .where(eq(users.authId, authId))
        .limit(1);

    if (existingUser.length === 0) {
        await db.insert(users).values({
            email: email,
            authId: authId,
             authName: name
        });
    }
}

export async function getAddresses(addressID: number): Promise<Addresses> {
    const address = await db.query.addresses.findFirst({
        where: eq(addresses.addressId, addressID)
    });
    if (!address) {
        throw new Error(`failed to fetch address`);
    }
    return address;
}

export async function getSpecItem(productID: number): Promise<SpecificItem> {
    const item = await db.query.specificItem.findFirst({
	where: eq(specificItem.id, productID)
    })
    if (!item) {
	throw new Error (`Failed to fetch product`)
    }
    return item
}

export async function getOrderItems(orderID: number) {
    const orderItem = await db.query.orderItems.findMany({
	where: eq(orderItems.orderId, orderID)
    })
    if (!orderItem) {
	throw new Error ('Failed to fetch items')
    }
    return orderItem
}

export async function getOrders() {    
    const order = await db.select().from(orders)
	.where(eq(orders.orderStatus, \"Your order has been received.\" ));   
    if (!order) {
        throw new Error('Failed to fetch orders.');
    }
    return order
}

export async function getCustomerOrders(ID: number) {    
    const order = await db.select().from(orders)
	.where(eq(orders.userId, ID ));
    if (!order) {
        throw new Error('Failed to fetch orders.');
    }
    return order
}

export async function getShippedOrders() {    
    const order = await db.select().from(orders)
	.where(eq(orders.orderStatus, \"Your order has been shipped.\" ));   
    if (!order) {
        throw new Error('Failed to fetch orders.');
    }
    return order
}


export async function getProduct(itemId: number) {
    const product = await db.query.productCatalouge.findFirst({
        where: eq(productCatalouge.id, itemId),
    });
    if (!product) {
        throw new Error(`Product not found`);
    }
    return product;
}

export async function getUserID(ID: string) {
    const user = await db.query.users.findFirst({
        where: eq(users.authId, ID),
    });
    const parsedUser = User.parse(user);
    if (!parsedUser) {
        throw new Error('User not found');
    }
    return parsedUser.id;
}

export async function getColourTable() {
    const colourTable = await db.select().from(colour);
    return colourTable;
}

export async function getImages(): Promise<Images[]> {
    const image: Images[] = await db.select().from(images);
    return image;
}

export async function getImage(imageId: number) {
    const image = await db.query.images.findFirst({
        where: eq(images.imageId, imageId),
    });
    if (!image) {
        throw new Error(`Image with id ${imageId} not found`);
    }
    return image;
}

export async function getSizeCategory(x: number) {
    let size: Size = [{ sizeId: 1, size: \"M\" }];
    let ribbonTable: Ribbon = [];
    const product: Product = await getProduct(x);
    switch (product?.category) {
        case \"mens\":
            size = await db.select().from(mensSize);
            break;
        case \"womans\":
        case \"kids\":
            size = await db.select().from(product?.category === \"womans\" ? womansSize : kidsSize);
            ribbonTable = await db.select().from(ribbon);
            break;
        default:
            break;
    }
    return { size, ribbonTable };
}

export async function getAllProducts(): Promise<Product[]> {
    try {
        const results: Product[] = await db.select().from(productCatalouge);
        return results;
    } catch (error) {
        console.error('Error fetching products:', error);
        throw new Error('Failed to fetch data');
    }
}
" 0 6 (face font-lock-keyword-face fontified t) 6 135 (fontified t) 135 139 (face font-lock-keyword-face fontified t) 139 140 (fontified t) 140 153 (face font-lock-string-face fontified t) 153 156 (fontified t) 156 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 176 (face font-lock-keyword-face fontified t) 176 177 (fontified t) 177 189 (face font-lock-string-face fontified t) 189 191 (fontified t) 191 197 (face font-lock-keyword-face fontified t) 197 205 (fontified t) 205 209 (face font-lock-keyword-face fontified t) 209 210 (fontified t) 210 223 (face font-lock-string-face fontified t) 223 225 (fontified t) 225 231 (face font-lock-keyword-face fontified t) 231 322 (fontified t) 322 326 (face font-lock-keyword-face fontified t) 326 327 (fontified t) 327 340 (face font-lock-string-face fontified t) 340 342 (fontified t) 342 348 (face font-lock-keyword-face fontified t) 348 356 (fontified t) 356 360 (face font-lock-keyword-face fontified t) 360 361 (fontified t) 361 372 (face font-lock-string-face fontified t) 372 373 (fontified t) 373 379 (face font-lock-keyword-face fontified t) 379 384 (fontified t) 384 388 (face font-lock-keyword-face fontified t) 388 389 (fontified t) 389 394 (face font-lock-string-face fontified t) 394 396 (fontified t) 396 402 (face font-lock-keyword-face fontified t) 402 403 (fontified t) 403 408 (face font-lock-keyword-face fontified t) 408 409 (fontified t) 409 417 (face font-lock-keyword-face fontified t) 417 418 (fontified t) 418 428 (face font-lock-function-name-face fontified t) 428 429 (fontified t) 429 434 (face font-lock-variable-name-face fontified t) 434 436 (fontified t) 436 442 (face typescript-primitive-face fontified t) 442 445 (fontified t) 445 449 (face font-lock-constant-face fontified t) 449 452 (fontified t) 452 456 (face font-lock-constant-face fontified t) 456 458 (fontified t) 458 462 (face font-lock-variable-name-face fontified t) 462 464 (fontified t) 464 470 (face typescript-primitive-face fontified t) 470 473 (fontified t) 473 477 (face font-lock-constant-face fontified t) 477 480 (fontified t) 480 484 (face font-lock-constant-face fontified t) 484 486 (fontified t) 486 492 (face font-lock-variable-name-face fontified t) 492 494 (fontified t) 494 500 (face typescript-primitive-face fontified t) 500 502 (fontified t) 502 503 (typescript--pstate ((nil 0 function 410 ("authManage") 800) (nil -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 503 509 (font-lock-multiline t fontified t) 509 514 (font-lock-multiline t face font-lock-keyword-face fontified t) 514 515 (font-lock-multiline t fontified t) 515 527 (face font-lock-variable-name-face font-lock-multiline t fontified t) 527 530 (font-lock-multiline t fontified t) 530 535 (font-lock-multiline t face font-lock-keyword-face fontified t) 535 539 (font-lock-multiline t fontified t) 539 545 (face font-lock-function-name-face font-lock-multiline t fontified t) 545 548 (font-lock-multiline t fontified t) 548 552 (font-lock-multiline t face font-lock-function-name-face fontified t) 552 553 (font-lock-multiline t fontified t) 553 558 (face font-lock-variable-name-face font-lock-multiline t fontified t) 558 569 (font-lock-multiline t fontified t) 569 574 (face font-lock-function-name-face font-lock-multiline t fontified t) 574 575 (font-lock-multiline t fontified t) 575 577 (face font-lock-function-name-face font-lock-multiline t fontified t) 577 610 (font-lock-multiline t fontified t) 610 615 (face font-lock-function-name-face font-lock-multiline t fontified t) 615 625 (font-lock-multiline t fontified t) 625 627 (font-lock-multiline t face font-lock-keyword-face fontified t) 627 666 (font-lock-multiline t fontified t) 666 671 (font-lock-multiline t face font-lock-keyword-face fontified t) 671 675 (font-lock-multiline t fontified t) 675 681 (face font-lock-function-name-face font-lock-multiline t fontified t) 681 689 (font-lock-multiline t fontified t) 689 695 (face font-lock-function-name-face font-lock-multiline t fontified t) 695 798 (font-lock-multiline t fontified t) 798 799 (typescript--pend (nil 0 function 410 ("authManage") 800) font-lock-multiline t fontified t) 799 801 (fontified t) 801 807 (face font-lock-keyword-face fontified t) 807 808 (fontified t) 808 813 (face font-lock-keyword-face fontified t) 813 814 (fontified t) 814 822 (face font-lock-keyword-face fontified t) 822 823 (fontified t) 823 835 (face font-lock-function-name-face fontified t) 835 836 (fontified t) 836 845 (face font-lock-variable-name-face fontified t) 845 847 (fontified t) 847 853 (face typescript-primitive-face fontified t) 853 856 (fontified t) 856 863 (face font-lock-type-face fontified t) 863 864 (fontified t) 864 873 (face font-lock-type-face fontified t) 873 875 (fontified t) 875 881 (font-lock-multiline t fontified t) 881 886 (font-lock-multiline t face font-lock-keyword-face fontified t) 886 887 (font-lock-multiline t fontified t) 887 894 (face font-lock-variable-name-face font-lock-multiline t fontified t) 894 897 (font-lock-multiline t fontified t) 897 902 (font-lock-multiline t face font-lock-keyword-face fontified t) 902 922 (font-lock-multiline t fontified t) 922 931 (face font-lock-function-name-face font-lock-multiline t fontified t) 931 949 (font-lock-multiline t fontified t) 949 951 (face font-lock-function-name-face font-lock-multiline t fontified t) 951 996 (font-lock-multiline t fontified t) 996 998 (font-lock-multiline t face font-lock-keyword-face fontified t) 998 1020 (font-lock-multiline t fontified t) 1020 1025 (font-lock-multiline t face font-lock-keyword-face fontified t) 1025 1026 (font-lock-multiline t fontified t) 1026 1029 (font-lock-multiline t face font-lock-keyword-face fontified t) 1029 1030 (font-lock-multiline t fontified t) 1030 1035 (face font-lock-type-face font-lock-multiline t fontified t) 1035 1036 (font-lock-multiline t fontified t) 1036 1061 (font-lock-multiline t face font-lock-string-face fontified t) 1061 1074 (font-lock-multiline t fontified t) 1074 1080 (font-lock-multiline t face font-lock-keyword-face fontified t) 1080 1091 (font-lock-multiline t fontified t) 1091 1093 (fontified t) 1093 1099 (face font-lock-keyword-face fontified t) 1099 1100 (fontified t) 1100 1105 (face font-lock-keyword-face fontified t) 1105 1106 (fontified t) 1106 1114 (face font-lock-keyword-face fontified t) 1114 1115 (fontified t) 1115 1126 (face font-lock-function-name-face fontified t) 1126 1127 (fontified t) 1127 1136 (face font-lock-variable-name-face fontified t) 1136 1138 (fontified t) 1138 1144 (face typescript-primitive-face fontified t) 1144 1147 (fontified t) 1147 1154 (face font-lock-type-face fontified t) 1154 1155 (fontified t) 1155 1167 (face font-lock-type-face fontified t) 1167 1169 (fontified t) 1169 1175 (font-lock-multiline t fontified t) 1175 1180 (font-lock-multiline t face font-lock-keyword-face fontified t) 1180 1181 (font-lock-multiline t fontified t) 1181 1185 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1185 1188 (font-lock-multiline t fontified t) 1188 1193 (font-lock-multiline t face font-lock-keyword-face fontified t) 1193 1216 (font-lock-multiline t fontified t) 1216 1225 (face font-lock-function-name-face font-lock-multiline t fontified t) 1225 1236 (font-lock-multiline t fontified t) 1236 1238 (face font-lock-function-name-face font-lock-multiline t fontified t) 1238 1278 (font-lock-multiline t fontified t) 1278 1280 (font-lock-multiline t face font-lock-keyword-face fontified t) 1280 1292 (font-lock-multiline t fontified t) 1292 1297 (font-lock-multiline t face font-lock-keyword-face fontified t) 1297 1298 (font-lock-multiline t fontified t) 1298 1301 (font-lock-multiline t face font-lock-keyword-face fontified t) 1301 1302 (font-lock-multiline t fontified t) 1302 1307 (face font-lock-type-face font-lock-multiline t fontified t) 1307 1309 (font-lock-multiline t fontified t) 1309 1334 (font-lock-multiline t face font-lock-string-face fontified t) 1334 1346 (font-lock-multiline t fontified t) 1346 1352 (font-lock-multiline t face font-lock-keyword-face fontified t) 1352 1359 (font-lock-multiline t fontified t) 1359 1361 (fontified t) 1361 1367 (face font-lock-keyword-face fontified t) 1367 1368 (fontified t) 1368 1373 (face font-lock-keyword-face fontified t) 1373 1374 (fontified t) 1374 1382 (face font-lock-keyword-face fontified t) 1382 1383 (fontified t) 1383 1396 (face font-lock-function-name-face fontified t) 1396 1397 (fontified t) 1397 1404 (face font-lock-variable-name-face fontified t) 1404 1406 (fontified t) 1406 1412 (face typescript-primitive-face fontified t) 1412 1414 (fontified t) 1414 1415 (font-lock-multiline t typescript--pstate ((nil 0 function 1375 ("getOrderItems") 1616) (((nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) fontified t) 1415 1420 (font-lock-multiline t fontified t) 1420 1425 (font-lock-multiline t face font-lock-keyword-face fontified t) 1425 1426 (font-lock-multiline t fontified t) 1426 1435 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1435 1438 (font-lock-multiline t fontified t) 1438 1443 (font-lock-multiline t face font-lock-keyword-face fontified t) 1443 1464 (font-lock-multiline t fontified t) 1464 1472 (face font-lock-function-name-face font-lock-multiline t fontified t) 1472 1483 (font-lock-multiline t fontified t) 1483 1485 (face font-lock-function-name-face font-lock-multiline t fontified t) 1485 1500 (font-lock-multiline t fontified t) 1500 1515 (font-lock-multiline t fontified t) 1515 1526 (font-lock-multiline t fontified t) 1526 1528 (font-lock-multiline t face font-lock-keyword-face fontified t) 1528 1545 (font-lock-multiline t fontified t) 1545 1550 (font-lock-multiline t face font-lock-keyword-face fontified t) 1550 1551 (font-lock-multiline t fontified t) 1551 1554 (font-lock-multiline t face font-lock-keyword-face fontified t) 1554 1555 (font-lock-multiline t fontified t) 1555 1560 (face font-lock-type-face font-lock-multiline t fontified t) 1560 1562 (font-lock-multiline t fontified t) 1562 1585 (font-lock-multiline t face font-lock-string-face fontified t) 1585 1597 (font-lock-multiline t fontified t) 1597 1603 (font-lock-multiline t face font-lock-keyword-face fontified t) 1603 1614 (font-lock-multiline t fontified t) 1614 1615 (typescript--pend (nil 0 function 1375 ("getOrderItems") 1616) font-lock-multiline t fontified t) 1615 1617 (fontified t) 1617 1623 (face font-lock-keyword-face fontified t) 1623 1624 (fontified t) 1624 1629 (face font-lock-keyword-face fontified t) 1629 1630 (fontified t) 1630 1638 (face font-lock-keyword-face fontified t) 1638 1639 (fontified t) 1639 1648 (face font-lock-function-name-face fontified t) 1648 1651 (fontified t) 1651 1652 (typescript--pstate ((nil 0 function 1631 ("getOrders") 1871) (((nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 1652 1661 (font-lock-multiline t fontified t) 1661 1666 (font-lock-multiline t face font-lock-keyword-face fontified t) 1666 1667 (font-lock-multiline t fontified t) 1667 1672 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1672 1675 (font-lock-multiline t fontified t) 1675 1680 (font-lock-multiline t face font-lock-keyword-face fontified t) 1680 1684 (font-lock-multiline t fontified t) 1684 1690 (face font-lock-function-name-face font-lock-multiline t fontified t) 1690 1693 (font-lock-multiline t fontified t) 1693 1697 (font-lock-multiline t face font-lock-function-name-face fontified t) 1697 1698 (font-lock-multiline t fontified t) 1698 1704 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1704 1708 (font-lock-multiline t fontified t) 1708 1713 (face font-lock-function-name-face font-lock-multiline t fontified t) 1713 1714 (font-lock-multiline t fontified t) 1714 1716 (face font-lock-function-name-face font-lock-multiline t fontified t) 1716 1737 (font-lock-multiline t fontified t) 1737 1768 (font-lock-multiline t face font-lock-string-face fontified t) 1768 1780 (font-lock-multiline t fontified t) 1780 1782 (font-lock-multiline t face font-lock-keyword-face fontified t) 1782 1802 (font-lock-multiline t fontified t) 1802 1807 (font-lock-multiline t face font-lock-keyword-face fontified t) 1807 1808 (font-lock-multiline t fontified t) 1808 1811 (font-lock-multiline t face font-lock-keyword-face fontified t) 1811 1812 (font-lock-multiline t fontified t) 1812 1817 (face font-lock-type-face font-lock-multiline t fontified t) 1817 1818 (font-lock-multiline t fontified t) 1818 1843 (font-lock-multiline t face font-lock-string-face fontified t) 1843 1856 (font-lock-multiline t fontified t) 1856 1862 (font-lock-multiline t face font-lock-keyword-face fontified t) 1862 1869 (font-lock-multiline t fontified t) 1869 1870 (typescript--pend (nil 0 function 1631 ("getOrders") 1871) font-lock-multiline t fontified t) 1870 1872 (fontified t) 1872 1878 (face font-lock-keyword-face fontified t) 1878 1879 (fontified t) 1879 1884 (face font-lock-keyword-face fontified t) 1884 1885 (fontified t) 1885 1893 (face font-lock-keyword-face fontified t) 1893 1894 (fontified t) 1894 1911 (face font-lock-function-name-face fontified t) 1911 1912 (fontified t) 1912 1914 (face font-lock-variable-name-face fontified t) 1914 1916 (fontified t) 1916 1922 (face typescript-primitive-face fontified t) 1922 1924 (fontified t) 1924 1925 (typescript--pstate ((nil 0 function 1886 ("getCustomerOrders") 2107) (((nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 1925 1934 (font-lock-multiline t fontified t) 1934 1939 (font-lock-multiline t face font-lock-keyword-face fontified t) 1939 1940 (font-lock-multiline t fontified t) 1940 1945 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1945 1948 (font-lock-multiline t fontified t) 1948 1953 (font-lock-multiline t face font-lock-keyword-face fontified t) 1953 1957 (font-lock-multiline t fontified t) 1957 1963 (face font-lock-function-name-face font-lock-multiline t fontified t) 1963 1966 (font-lock-multiline t fontified t) 1966 1970 (font-lock-multiline t face font-lock-function-name-face fontified t) 1970 1971 (font-lock-multiline t fontified t) 1971 1977 (face font-lock-variable-name-face font-lock-multiline t fontified t) 1977 1981 (font-lock-multiline t fontified t) 1981 1986 (face font-lock-function-name-face font-lock-multiline t fontified t) 1986 1987 (font-lock-multiline t fontified t) 1987 1989 (face font-lock-function-name-face font-lock-multiline t fontified t) 1989 2016 (font-lock-multiline t fontified t) 2016 2018 (font-lock-multiline t face font-lock-keyword-face fontified t) 2018 2038 (font-lock-multiline t fontified t) 2038 2043 (font-lock-multiline t face font-lock-keyword-face fontified t) 2043 2044 (font-lock-multiline t fontified t) 2044 2047 (font-lock-multiline t face font-lock-keyword-face fontified t) 2047 2048 (font-lock-multiline t fontified t) 2048 2053 (face font-lock-type-face font-lock-multiline t fontified t) 2053 2054 (font-lock-multiline t fontified t) 2054 2079 (font-lock-multiline t face font-lock-string-face fontified t) 2079 2092 (font-lock-multiline t fontified t) 2092 2098 (font-lock-multiline t face font-lock-keyword-face fontified t) 2098 2105 (font-lock-multiline t fontified t) 2105 2106 (typescript--pend (nil 0 function 1886 ("getCustomerOrders") 2107) font-lock-multiline t fontified t) 2106 2108 (fontified t) 2108 2114 (face font-lock-keyword-face fontified t) 2114 2115 (fontified t) 2115 2120 (face font-lock-keyword-face fontified t) 2120 2121 (fontified t) 2121 2129 (face font-lock-keyword-face fontified t) 2129 2130 (fontified t) 2130 2146 (face font-lock-function-name-face fontified t) 2146 2149 (fontified t) 2149 2150 (typescript--pstate ((nil 0 function 2122 ("getShippedOrders") 2368) (((nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 2150 2159 (font-lock-multiline t fontified t) 2159 2164 (font-lock-multiline t face font-lock-keyword-face fontified t) 2164 2165 (font-lock-multiline t fontified t) 2165 2170 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2170 2173 (font-lock-multiline t fontified t) 2173 2178 (font-lock-multiline t face font-lock-keyword-face fontified t) 2178 2182 (font-lock-multiline t fontified t) 2182 2188 (face font-lock-function-name-face font-lock-multiline t fontified t) 2188 2191 (font-lock-multiline t fontified t) 2191 2195 (font-lock-multiline t face font-lock-function-name-face fontified t) 2195 2196 (font-lock-multiline t fontified t) 2196 2202 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2202 2206 (font-lock-multiline t fontified t) 2206 2211 (face font-lock-function-name-face font-lock-multiline t fontified t) 2211 2212 (font-lock-multiline t fontified t) 2212 2214 (face font-lock-function-name-face font-lock-multiline t fontified t) 2214 2235 (font-lock-multiline t fontified t) 2235 2265 (font-lock-multiline t face font-lock-string-face fontified t) 2265 2277 (font-lock-multiline t fontified t) 2277 2279 (font-lock-multiline t face font-lock-keyword-face fontified t) 2279 2299 (font-lock-multiline t fontified t) 2299 2304 (font-lock-multiline t face font-lock-keyword-face fontified t) 2304 2305 (font-lock-multiline t fontified t) 2305 2308 (font-lock-multiline t face font-lock-keyword-face fontified t) 2308 2309 (font-lock-multiline t fontified t) 2309 2314 (face font-lock-type-face font-lock-multiline t fontified t) 2314 2315 (font-lock-multiline t fontified t) 2315 2340 (font-lock-multiline t face font-lock-string-face fontified t) 2340 2353 (font-lock-multiline t fontified t) 2353 2359 (font-lock-multiline t face font-lock-keyword-face fontified t) 2359 2366 (font-lock-multiline t fontified t) 2366 2367 (typescript--pend (nil 0 function 2122 ("getShippedOrders") 2368) font-lock-multiline t fontified t) 2367 2370 (fontified t) 2370 2376 (face font-lock-keyword-face fontified t) 2376 2377 (fontified t) 2377 2382 (face font-lock-keyword-face fontified t) 2382 2383 (fontified t) 2383 2391 (face font-lock-keyword-face fontified t) 2391 2392 (fontified t) 2392 2402 (face font-lock-function-name-face fontified t) 2402 2403 (fontified t) 2403 2409 (face font-lock-variable-name-face fontified t) 2409 2411 (fontified t) 2411 2417 (face typescript-primitive-face fontified t) 2417 2419 (fontified t) 2419 2420 (typescript--pstate ((nil 0 function 2384 ("getProduct") 2635) (((nil 0 function 2122 ("getShippedOrders") 2368) (nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 2420 2425 (font-lock-multiline t fontified t) 2425 2430 (font-lock-multiline t face font-lock-keyword-face fontified t) 2430 2431 (font-lock-multiline t fontified t) 2431 2438 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2438 2441 (font-lock-multiline t fontified t) 2441 2446 (font-lock-multiline t face font-lock-keyword-face fontified t) 2446 2473 (font-lock-multiline t fontified t) 2473 2482 (face font-lock-function-name-face font-lock-multiline t fontified t) 2482 2500 (font-lock-multiline t fontified t) 2500 2502 (face font-lock-function-name-face font-lock-multiline t fontified t) 2502 2545 (font-lock-multiline t fontified t) 2545 2547 (font-lock-multiline t face font-lock-keyword-face fontified t) 2547 2569 (font-lock-multiline t fontified t) 2569 2574 (font-lock-multiline t face font-lock-keyword-face fontified t) 2574 2575 (font-lock-multiline t fontified t) 2575 2578 (font-lock-multiline t face font-lock-keyword-face fontified t) 2578 2579 (font-lock-multiline t fontified t) 2579 2584 (face font-lock-type-face font-lock-multiline t fontified t) 2584 2585 (font-lock-multiline t fontified t) 2585 2604 (font-lock-multiline t face font-lock-string-face fontified t) 2604 2617 (font-lock-multiline t fontified t) 2617 2623 (font-lock-multiline t face font-lock-keyword-face fontified t) 2623 2633 (font-lock-multiline t fontified t) 2633 2634 (typescript--pend (nil 0 function 2384 ("getProduct") 2635) font-lock-multiline t fontified t) 2634 2636 (fontified t) 2636 2642 (face font-lock-keyword-face fontified t) 2642 2643 (fontified t) 2643 2648 (face font-lock-keyword-face fontified t) 2648 2649 (fontified t) 2649 2657 (face font-lock-keyword-face fontified t) 2657 2658 (fontified t) 2658 2667 (face font-lock-function-name-face fontified t) 2667 2668 (fontified t) 2668 2670 (face font-lock-variable-name-face fontified t) 2670 2672 (fontified t) 2672 2678 (face typescript-primitive-face fontified t) 2678 2680 (fontified t) 2680 2681 (typescript--pstate ((nil 0 function 2650 ("getUserID") 2918) (((nil 0 function 2384 ("getProduct") 2635) (nil 0 function 2122 ("getShippedOrders") 2368) (nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 2681 2686 (font-lock-multiline t fontified t) 2686 2691 (font-lock-multiline t face font-lock-keyword-face fontified t) 2691 2692 (font-lock-multiline t fontified t) 2692 2696 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2696 2699 (font-lock-multiline t fontified t) 2699 2704 (font-lock-multiline t face font-lock-keyword-face fontified t) 2704 2720 (font-lock-multiline t fontified t) 2720 2729 (face font-lock-function-name-face font-lock-multiline t fontified t) 2729 2747 (font-lock-multiline t fontified t) 2747 2749 (face font-lock-function-name-face font-lock-multiline t fontified t) 2749 2781 (font-lock-multiline t fontified t) 2781 2786 (font-lock-multiline t face font-lock-keyword-face fontified t) 2786 2787 (font-lock-multiline t fontified t) 2787 2797 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2797 2805 (font-lock-multiline t fontified t) 2805 2810 (face font-lock-function-name-face font-lock-multiline t fontified t) 2810 2822 (font-lock-multiline t fontified t) 2822 2824 (font-lock-multiline t face font-lock-keyword-face fontified t) 2824 2849 (font-lock-multiline t fontified t) 2849 2854 (font-lock-multiline t face font-lock-keyword-face fontified t) 2854 2855 (font-lock-multiline t fontified t) 2855 2858 (font-lock-multiline t face font-lock-keyword-face fontified t) 2858 2859 (font-lock-multiline t fontified t) 2859 2864 (face font-lock-type-face font-lock-multiline t fontified t) 2864 2865 (font-lock-multiline t fontified t) 2865 2881 (font-lock-multiline t face font-lock-string-face fontified t) 2881 2894 (font-lock-multiline t fontified t) 2894 2900 (font-lock-multiline t face font-lock-keyword-face fontified t) 2900 2916 (font-lock-multiline t fontified t) 2916 2917 (typescript--pend (nil 0 function 2650 ("getUserID") 2918) font-lock-multiline t fontified t) 2917 2919 (fontified t) 2919 2925 (face font-lock-keyword-face fontified t) 2925 2926 (fontified t) 2926 2931 (face font-lock-keyword-face fontified t) 2931 2932 (fontified t) 2932 2940 (face font-lock-keyword-face fontified t) 2940 2941 (fontified t) 2941 2955 (face font-lock-function-name-face fontified t) 2955 2958 (fontified t) 2958 2959 (font-lock-multiline t typescript--pstate ((nil 0 function 2933 ("getColourTable") 3042) (((nil 0 function 2650 ("getUserID") 2918) (nil 0 function 2384 ("getProduct") 2635) (nil 0 function 2122 ("getShippedOrders") 2368) (nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) fontified t) 2959 2964 (font-lock-multiline t fontified t) 2964 2969 (font-lock-multiline t face font-lock-keyword-face fontified t) 2969 2970 (font-lock-multiline t fontified t) 2970 2981 (face font-lock-variable-name-face font-lock-multiline t fontified t) 2981 2984 (font-lock-multiline t fontified t) 2984 2989 (font-lock-multiline t face font-lock-keyword-face fontified t) 2989 2993 (font-lock-multiline t fontified t) 2993 2999 (face font-lock-function-name-face font-lock-multiline t fontified t) 2999 3002 (font-lock-multiline t fontified t) 3002 3006 (font-lock-multiline t face font-lock-function-name-face fontified t) 3006 3007 (font-lock-multiline t fontified t) 3007 3013 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3013 3015 (font-lock-multiline t fontified t) 3015 3016 (font-lock-multiline t fontified t) 3016 3020 (font-lock-multiline t fontified t) 3020 3026 (font-lock-multiline t face font-lock-keyword-face fontified t) 3026 3040 (font-lock-multiline t fontified t) 3040 3041 (typescript--pend (nil 0 function 2933 ("getColourTable") 3042) font-lock-multiline t fontified t) 3041 3043 (fontified t) 3043 3049 (face font-lock-keyword-face fontified t) 3049 3050 (fontified t) 3050 3055 (face font-lock-keyword-face fontified t) 3055 3056 (fontified t) 3056 3064 (face font-lock-keyword-face fontified t) 3064 3065 (fontified t) 3065 3074 (face font-lock-function-name-face fontified t) 3074 3078 (fontified t) 3078 3085 (face font-lock-type-face fontified t) 3085 3086 (fontified t) 3086 3092 (face font-lock-type-face fontified t) 3092 3096 (fontified t) 3096 3102 (font-lock-multiline t fontified t) 3102 3107 (font-lock-multiline t face font-lock-keyword-face fontified t) 3107 3108 (font-lock-multiline t fontified t) 3108 3113 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3113 3115 (font-lock-multiline t fontified t) 3115 3121 (font-lock-multiline t face font-lock-type-face fontified t) 3121 3126 (font-lock-multiline t fontified t) 3126 3131 (font-lock-multiline t face font-lock-keyword-face fontified t) 3131 3135 (font-lock-multiline t fontified t) 3135 3141 (face font-lock-function-name-face font-lock-multiline t fontified t) 3141 3144 (font-lock-multiline t fontified t) 3144 3148 (font-lock-multiline t face font-lock-function-name-face fontified t) 3148 3149 (font-lock-multiline t fontified t) 3149 3155 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3155 3162 (font-lock-multiline t fontified t) 3162 3168 (font-lock-multiline t face font-lock-keyword-face fontified t) 3168 3177 (font-lock-multiline t fontified t) 3177 3179 (fontified t) 3179 3185 (face font-lock-keyword-face fontified t) 3185 3186 (fontified t) 3186 3191 (face font-lock-keyword-face fontified t) 3191 3192 (fontified t) 3192 3200 (face font-lock-keyword-face fontified t) 3200 3201 (fontified t) 3201 3209 (face font-lock-function-name-face fontified t) 3209 3210 (fontified t) 3210 3217 (face font-lock-variable-name-face fontified t) 3217 3219 (fontified t) 3219 3225 (face typescript-primitive-face fontified t) 3225 3227 (fontified t) 3227 3228 (typescript--pstate ((nil 0 function 3193 ("getImage") 3440) (((nil 0 function 2933 ("getColourTable") 3042) (nil 0 function 2650 ("getUserID") 2918) (nil 0 function 2384 ("getProduct") 2635) (nil 0 function 2122 ("getShippedOrders") 2368) (nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 3228 3233 (font-lock-multiline t fontified t) 3233 3238 (font-lock-multiline t face font-lock-keyword-face fontified t) 3238 3239 (font-lock-multiline t fontified t) 3239 3244 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3244 3247 (font-lock-multiline t fontified t) 3247 3252 (font-lock-multiline t face font-lock-keyword-face fontified t) 3252 3269 (font-lock-multiline t fontified t) 3269 3278 (face font-lock-function-name-face font-lock-multiline t fontified t) 3278 3296 (font-lock-multiline t fontified t) 3296 3298 (face font-lock-function-name-face font-lock-multiline t fontified t) 3298 3337 (font-lock-multiline t fontified t) 3337 3339 (font-lock-multiline t face font-lock-keyword-face fontified t) 3339 3359 (font-lock-multiline t fontified t) 3359 3364 (font-lock-multiline t face font-lock-keyword-face fontified t) 3364 3365 (font-lock-multiline t fontified t) 3365 3368 (font-lock-multiline t face font-lock-keyword-face fontified t) 3368 3369 (font-lock-multiline t fontified t) 3369 3374 (face font-lock-type-face font-lock-multiline t fontified t) 3374 3375 (font-lock-multiline t fontified t) 3375 3390 (font-lock-multiline t face font-lock-string-face fontified t) 3390 3392 (font-lock-multiline t face font-lock-keyword-face fontified t) 3392 3399 (font-lock-multiline t face default fontified t) 3399 3400 (font-lock-multiline t face font-lock-keyword-face fontified t) 3400 3411 (font-lock-multiline t face font-lock-string-face fontified t) 3411 3424 (font-lock-multiline t fontified t) 3424 3430 (font-lock-multiline t face font-lock-keyword-face fontified t) 3430 3438 (font-lock-multiline t fontified t) 3438 3439 (typescript--pend (nil 0 function 3193 ("getImage") 3440) font-lock-multiline t fontified t) 3439 3441 (fontified t) 3441 3447 (face font-lock-keyword-face fontified t) 3447 3448 (fontified t) 3448 3453 (face font-lock-keyword-face fontified t) 3453 3454 (fontified t) 3454 3462 (face font-lock-keyword-face fontified t) 3462 3463 (fontified t) 3463 3478 (face font-lock-function-name-face fontified t) 3478 3479 (fontified t) 3479 3480 (face font-lock-variable-name-face fontified t) 3480 3482 (fontified t) 3482 3488 (face typescript-primitive-face fontified t) 3488 3490 (fontified t) 3490 3491 (typescript--pstate ((nil 0 function 3455 ("getSizeCategory") 4049) (((nil 0 function 3193 ("getImage") 3440) (nil 0 function 2933 ("getColourTable") 3042) (nil 0 function 2650 ("getUserID") 2918) (nil 0 function 2384 ("getProduct") 2635) (nil 0 function 2122 ("getShippedOrders") 2368) (nil 0 function 1886 ("getCustomerOrders") 2107) (nil 0 function 1631 ("getOrders") 1871) (nil 0 function 1375 ("getOrderItems") 1616) (nil 0 function 410 ("authManage") 800)) -2305843009213693952 toplevel nil nil nil)) font-lock-multiline t fontified t) 3491 3496 (font-lock-multiline t fontified t) 3496 3499 (font-lock-multiline t face font-lock-keyword-face fontified t) 3499 3500 (font-lock-multiline t fontified t) 3500 3504 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3504 3506 (font-lock-multiline t fontified t) 3506 3510 (font-lock-multiline t face font-lock-type-face fontified t) 3510 3533 (font-lock-multiline t fontified t) 3533 3536 (font-lock-multiline t face font-lock-string-face fontified t) 3536 3545 (font-lock-multiline t fontified t) 3545 3548 (font-lock-multiline t face font-lock-keyword-face fontified t) 3548 3549 (font-lock-multiline t fontified t) 3549 3560 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3560 3562 (font-lock-multiline t fontified t) 3562 3568 (font-lock-multiline t face font-lock-type-face fontified t) 3568 3579 (font-lock-multiline t fontified t) 3579 3584 (font-lock-multiline t face font-lock-keyword-face fontified t) 3584 3585 (font-lock-multiline t fontified t) 3585 3592 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3592 3594 (font-lock-multiline t fontified t) 3594 3601 (font-lock-multiline t face font-lock-type-face fontified t) 3601 3604 (font-lock-multiline t fontified t) 3604 3609 (font-lock-multiline t face font-lock-keyword-face fontified t) 3609 3610 (font-lock-multiline t fontified t) 3610 3620 (face font-lock-function-name-face font-lock-multiline t fontified t) 3620 3629 (font-lock-multiline t fontified t) 3629 3635 (font-lock-multiline t face font-lock-keyword-face fontified t) 3635 3666 (font-lock-multiline t fontified t) 3666 3670 (font-lock-multiline t face font-lock-keyword-face fontified t) 3670 3671 (font-lock-multiline t fontified t) 3671 3677 (font-lock-multiline t face font-lock-string-face fontified t) 3677 3698 (font-lock-multiline t fontified t) 3698 3703 (font-lock-multiline t face font-lock-keyword-face fontified t) 3703 3707 (font-lock-multiline t fontified t) 3707 3713 (face font-lock-function-name-face font-lock-multiline t fontified t) 3713 3716 (font-lock-multiline t fontified t) 3716 3720 (font-lock-multiline t face font-lock-function-name-face fontified t) 3720 3721 (font-lock-multiline t fontified t) 3721 3729 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3729 3744 (font-lock-multiline t fontified t) 3744 3749 (font-lock-multiline t face font-lock-keyword-face fontified t) 3749 3759 (font-lock-multiline t fontified t) 3759 3763 (font-lock-multiline t face font-lock-keyword-face fontified t) 3763 3764 (font-lock-multiline t fontified t) 3764 3772 (font-lock-multiline t face font-lock-string-face fontified t) 3772 3782 (font-lock-multiline t fontified t) 3782 3786 (font-lock-multiline t face font-lock-keyword-face fontified t) 3786 3787 (font-lock-multiline t fontified t) 3787 3793 (font-lock-multiline t face font-lock-string-face fontified t) 3793 3814 (font-lock-multiline t fontified t) 3814 3819 (font-lock-multiline t face font-lock-keyword-face fontified t) 3819 3823 (font-lock-multiline t fontified t) 3823 3829 (face font-lock-function-name-face font-lock-multiline t fontified t) 3829 3832 (font-lock-multiline t fontified t) 3832 3836 (font-lock-multiline t face font-lock-function-name-face fontified t) 3836 3859 (font-lock-multiline t fontified t) 3859 3867 (font-lock-multiline t face font-lock-string-face fontified t) 3867 3870 (font-lock-multiline t fontified t) 3870 3880 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3880 3920 (font-lock-multiline t fontified t) 3920 3925 (font-lock-multiline t face font-lock-keyword-face fontified t) 3925 3929 (font-lock-multiline t fontified t) 3929 3935 (face font-lock-function-name-face font-lock-multiline t fontified t) 3935 3938 (font-lock-multiline t fontified t) 3938 3942 (font-lock-multiline t face font-lock-function-name-face fontified t) 3942 3943 (font-lock-multiline t fontified t) 3943 3949 (face font-lock-variable-name-face font-lock-multiline t fontified t) 3949 3964 (font-lock-multiline t fontified t) 3964 3969 (font-lock-multiline t face font-lock-keyword-face fontified t) 3969 3979 (font-lock-multiline t fontified t) 3979 3986 (font-lock-multiline t face default fontified t) 3986 4000 (font-lock-multiline t fontified t) 4000 4005 (font-lock-multiline t face font-lock-keyword-face fontified t) 4005 4017 (font-lock-multiline t fontified t) 4017 4023 (font-lock-multiline t face font-lock-keyword-face fontified t) 4023 4047 (font-lock-multiline t fontified t) 4047 4048 (typescript--pend (nil 0 function 3455 ("getSizeCategory") 4049) font-lock-multiline t fontified t) 4048 4050 (fontified t) 4050 4056 (face font-lock-keyword-face fontified t) 4056 4057 (fontified t) 4057 4062 (face font-lock-keyword-face fontified t) 4062 4063 (fontified t) 4063 4071 (face font-lock-keyword-face fontified t) 4071 4072 (fontified t) 4072 4086 (face font-lock-function-name-face fontified t) 4086 4090 (fontified t) 4090 4097 (face font-lock-type-face fontified t) 4097 4098 (fontified t) 4098 4105 (face font-lock-type-face fontified t) 4105 4109 (fontified t) 4109 4115 (font-lock-multiline t fontified t) 4115 4118 (font-lock-multiline t face font-lock-keyword-face fontified t) 4118 4129 (font-lock-multiline t fontified t) 4129 4134 (font-lock-multiline t face font-lock-keyword-face fontified t) 4134 4135 (font-lock-multiline t fontified t) 4135 4142 (face font-lock-variable-name-face font-lock-multiline t fontified t) 4142 4144 (font-lock-multiline t fontified t) 4144 4151 (font-lock-multiline t face font-lock-type-face fontified t) 4151 4156 (font-lock-multiline t fontified t) 4156 4161 (font-lock-multiline t face font-lock-keyword-face fontified t) 4161 4165 (font-lock-multiline t fontified t) 4165 4171 (face font-lock-function-name-face font-lock-multiline t fontified t) 4171 4174 (font-lock-multiline t fontified t) 4174 4178 (font-lock-multiline t face font-lock-function-name-face fontified t) 4178 4179 (font-lock-multiline t fontified t) 4179 4195 (face font-lock-variable-name-face font-lock-multiline t fontified t) 4195 4206 (font-lock-multiline t fontified t) 4206 4212 (font-lock-multiline t face font-lock-keyword-face fontified t) 4212 4228 (font-lock-multiline t fontified t) 4228 4233 (font-lock-multiline t face font-lock-keyword-face fontified t) 4233 4252 (font-lock-multiline t fontified t) 4252 4259 (face font-lock-type-face font-lock-multiline t fontified t) 4259 4260 (font-lock-multiline t fontified t) 4260 4265 (face font-lock-function-name-face font-lock-multiline t fontified t) 4265 4266 (font-lock-multiline t fontified t) 4266 4292 (font-lock-multiline t face font-lock-string-face fontified t) 4292 4310 (font-lock-multiline t fontified t) 4310 4315 (font-lock-multiline t face font-lock-keyword-face fontified t) 4315 4316 (font-lock-multiline t fontified t) 4316 4319 (font-lock-multiline t face font-lock-keyword-face fontified t) 4319 4320 (font-lock-multiline t fontified t) 4320 4325 (face font-lock-type-face font-lock-multiline t fontified t) 4325 4326 (font-lock-multiline t fontified t) 4326 4348 (font-lock-multiline t face font-lock-string-face fontified t) 4348 4358 (font-lock-multiline t fontified t) 4358 4359 (fontified t)) . 1) (undo-tree-id0 . -4359) (undo-tree-id1 . -1416) (undo-tree-id2 . -1416) (t 26456 16469 149411 239000)) nil (26471 1831 502871 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4540 . 4541) (nil fontified nil 1 . 4541) (1 . 4541)) nil (26471 1831 502861 0) 0 nil])
([nil nil ((4541 . 4542)) nil (26471 1831 502858 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3244) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -3245) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("P" 0 1 (fontified t)) . -3246) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -3247) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -3248) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("m" 0 1 (face font-lock-type-face fontified t)) . -3249) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -3250) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -3251) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -3252) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("<" 0 1 (fontified t)) . -3253) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -3254) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("m" 0 1 (face font-lock-type-face fontified t)) . -3255) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -3256) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -3257) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -3258) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -3259) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("[" 0 1 (fontified t)) . -3260) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("]" 0 1 (fontified t)) . -3261) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(">" 0 1 (fontified t)) . -3262) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 3263 (t 26471 1831 505510 154000)) nil (26488 4594 110623 0) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-multiline t fontified t)) . -3683) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("i" 0 1 (font-lock-multiline t fontified t)) . -3684) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("z" 0 1 (font-lock-multiline t fontified t)) . -3685) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -3686) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -3687) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 3688 (t 26488 4594 115200 418000)) nil (26490 57653 907040 0) 0 nil])
([nil nil ((3683 . 3684)) nil (26490 57653 907014 0) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-multiline t fontified t)) . -3466) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("m" 0 1 (font-lock-multiline t fontified t)) . -3467) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("a" 0 1 (font-lock-multiline t fontified t)) . -3468) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("g" 0 1 (font-lock-multiline t fontified t)) . -3469) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -3470) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -3471) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 3472 (t 26490 57653 909731 447000)) nil (26490 57684 265615 0) 0 nil])
([nil nil ((3466 . 3467)) nil (26490 57684 265602 0) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-multiline t fontified t)) . -1018) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("d" 0 1 (font-lock-multiline t fontified t)) . -1019) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("d" 0 1 (font-lock-multiline t fontified t)) . -1020) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("r" 0 1 (font-lock-multiline t fontified t)) . -1021) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("e" 0 1 (font-lock-multiline t fontified t)) . -1022) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("s" 0 1 (font-lock-multiline t fontified t)) . -1023) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("s" 0 1 (font-lock-multiline t fontified t)) . -1024) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("I" 0 1 (font-lock-multiline t fontified t)) . -1025) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 1026) nil (26490 57684 265598 0) 0 nil])
([nil nil ((1018 . 1019)) nil (26490 57684 265557 0) 0 nil])
([nil nil ((3586 . 3587) (t 26490 57684 268092 354000)) nil (26490 57858 845604 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3586) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 3587) nil (26490 57858 845601 0) 0 nil])
([nil nil ((3940 . 3941) (t 26490 57858 849303 897000)) nil (26492 24935 228947 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t fontified t)) . -3940) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 3941) nil (26492 24935 228944 0) 0 nil])
([nil nil ((4191 . 4192) (t 26492 24935 231922 180000)) nil (26503 58313 140620 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4191) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 4192) nil (26503 58313 140616 0) 0 nil])
([nil nil ((2558 . 2568) (t 26503 58313 145728 19000)) nil (26503 59187 459276 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-type-face fontified t)) . -2567) (undo-tree-id2 . -1) 2568) nil (26503 59187 459274 0) 0 nil])
([nil nil ((2567 . 2568)) nil (26503 59187 459265 0) 0 nil])
([nil nil ((2568 . 2575)) nil (26503 59187 459261 0) 0 nil])
([nil nil ((2559 . 2560) (t 26503 59187 463513 809000)) nil (26503 59227 243450 0) 0 nil])
([nil current ((#(":" 0 1 (fontified t)) . -2558) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -2559) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("P" 0 1 (fontified t)) . -2560) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2561) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -2562) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("m" 0 1 (face font-lock-type-face fontified t)) . -2563) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2564) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -2565) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -2566) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("<" 0 1 (fontified t)) . -2567) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("P" 0 1 (face font-lock-type-face fontified t)) . -2568) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2569) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -2570) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -2571) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -2572) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -2573) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -2574) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#(">" 0 1 (fontified t)) . -2575) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 2576) nil (26503 59227 243442 0) 0 nil])
nil
