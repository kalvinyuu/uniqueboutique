(undo-tree-save-format-version . 1)
"f9e611ce1e7826270bbe3fc35cabce7dd20c87fd"
[nil nil nil nil (26457 54868 525452 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])]
([nil nil ((#("
" 0 1 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . -524) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 525 (t 26447 62702 573674 65000)) nil (26457 54868 525451 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((529 . 536) (497 . 501) (524 . 525)) nil (26457 54868 525448 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((536 . 541)) nil (26457 54868 525447 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((536 . 544) (#("prior" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t tag-attr-beg 0 jsx-depth 3 part-side jsx) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr-end 0 tag-attr t jsx-depth 3 part-side jsx)) . -536) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) 541) nil (26467 25293 713573 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((528 . 536) (t 26457 54868 526988 437000)) nil (26471 4058 154059 0) 0 nil] [nil nil ((684 . 689) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 684) (679 . 680) (#("    " 0 4 (jsx-depth 2 part-side jsx)) . 679) (650 . 654) (487 . 488) (471 . 472) (431 . 435) (300 . 304) (270 . 271) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 270) (nil rear-nonsticky nil 664 . 665) (nil part-side jsx 664 . 665) (nil jsx-depth 2 664 . 665) (nil tag-name "speedinsights" 664 . 665) (nil tag-type void 664 . 665) (nil tag-end t 664 . 665) (nil part-side jsx 649 . 664) (nil jsx-depth 2 649 . 664) (nil tag-name "speedinsights" 649 . 664) (nil tag-type void 649 . 664) (nil part-side jsx 648 . 649) (nil jsx-depth 2 648 . 649) (nil tag-name "speedinsights" 648 . 649) (nil tag-type void 648 . 649) (nil tag-beg 24 648 . 649) (648 . 665) (t 26457 54868 526988 437000)) ((#("<SpeedInsights />" 0 1 (tag-beg 24 tag-type void tag-name "speedinsights" jsx-depth 2 part-side jsx) 1 16 (tag-type void tag-name "speedinsights" jsx-depth 2 part-side jsx) 16 17 (tag-end t tag-type void tag-name "speedinsights" jsx-depth 2 part-side jsx rear-nonsticky nil)) . 648) (undo-tree-id0 . -17) (undo-tree-id1 . -17) (nil tag-name "speedinsights" 648 . 649) (nil tag-name "speedinsights" 649 . 664) (nil tag-name "speedinsights" 664 . 665) (nil rear-nonsticky t 664 . 665) (270 . 274) (#("	" 0 1 (jsx-depth 1 part-side jsx)) . 270) (#("    " 0 4 (jsx-depth 2 part-side jsx)) . 300) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . 431) (#("	" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx)) . 471) (#("	" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx)) . 487) (#("    " 0 4 (jsx-depth 2 part-side jsx)) . 650) (679 . 683) (#("	" 0 1 (jsx-depth 2 part-side jsx)) . 679) (684 . 690) (#("	    " 0 5 (jsx-depth 1 part-side jsx)) . 684)) (26467 25293 339676 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((722 . 727) (#("      " 0 6 (jsx-depth 1 part-side jsx)) . 722) (717 . 718) (#("    " 0 4 (jsx-depth 2 part-side jsx)) . 717) (705 . 709) (694 . 695) (#("    " 0 4 (jsx-depth 3 part-side jsx)) . 694) (683 . 687) (663 . 664) (#("    " 0 4 (jsx-depth 3 part-side jsx)) . 663) (652 . 656) (640 . 644) (621 . 622) (#("    " 0 4 (jsx-depth 3 part-side jsx)) . 621) (610 . 614) (599 . 603) (586 . 587) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . 586) (542 . 543) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . 542) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (510 . 511) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . 510) (489 . 494) (469 . 474) (432 . 433) (418 . 422) (382 . 383) (#("    " 0 4 (jsx-depth 3 part-side jsx)) . 382) (300 . 304) (270 . 271) (#("    " 0 4 (jsx-depth 1 part-side jsx)) . 270) (nil rear-nonsticky nil 574 . 575) (nil part-side jsx 574 . 575) (nil jsx-depth 3 574 . 575) (nil tag-attr t 574 . 575) (nil tag-attr-end 5 574 . 575) (nil tag-name "image" 574 . 575) (nil tag-type void 574 . 575) (nil font-lock-face web-mode-html-attr-value-face 574 . 575) (nil part-side jsx 553 . 574) (nil jsx-depth 3 553 . 574) (nil tag-attr t 553 . 574) (nil tag-name "image" 553 . 574) (nil tag-type void 553 . 574) (nil font-lock-face web-mode-html-attr-value-face 553 . 574) (nil part-side jsx 548 . 553) (nil jsx-depth 3 548 . 553) (nil tag-attr t 548 . 553) (nil tag-name "image" 548 . 553) (nil tag-type void 548 . 553) (nil font-lock-face web-mode-html-attr-value-face 548 . 553) (nil part-side jsx 542 . 548) (nil jsx-depth 3 542 . 548) (nil tag-attr t 542 . 548) (nil tag-name "image" 542 . 548) (nil tag-type void 542 . 548) (nil font-lock-face web-mode-html-attr-value-face 542 . 548) (nil part-side jsx 541 . 542) (nil jsx-depth 3 541 . 542) (nil tag-attr t 541 . 542) (nil tag-name "image" 541 . 542) (nil tag-type void 541 . 542) (nil font-lock-face web-mode-html-attr-equal-face 541 . 542) (nil part-side jsx 537 . 541) (nil jsx-depth 3 537 . 541) (nil tag-attr t 537 . 541) (nil tag-name "image" 537 . 541) (nil tag-type void 537 . 541) (nil font-lock-face web-mode-html-attr-name-face 537 . 541) (nil part-side jsx 536 . 537) (nil jsx-depth 3 536 . 537) (nil tag-attr-beg 0 536 . 537) (nil tag-attr t 536 . 537) (nil tag-name "image" 536 . 537) (nil tag-type void 536 . 537) (nil font-lock-face web-mode-html-attr-name-face 536 . 537) (536 . 575)) nil (26471 4058 154052 0) 0 nil])
nil
([nil nil ((#("sizes=\"(max-width: 768px) 100vw, 300px\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 6 12 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 12 17 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 17 38 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "image" tag-attr t jsx-depth 3 part-side jsx) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "image" tag-attr-end 9 tag-attr t jsx-depth 3 part-side jsx rear-nonsticky t)) . 543) (undo-tree-id5 . -39) (t 26471 4058 157204 632000)) nil (26473 51538 683394 0) 0 nil])
([nil nil ((599 . 603) (539 . 543) (503 . 507) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . -486) (#("    " 0 4 (tag-type void tag-name "image" jsx-depth 3 part-side jsx)) . -470) (nil rear-nonsticky nil 593 . 594) (nil part-side jsx 593 . 594) (nil jsx-depth 3 593 . 594) (nil tag-attr t 593 . 594) (nil tag-attr-end 9 593 . 594) (nil tag-name "image" 593 . 594) (nil tag-type void 593 . 594) (nil font-lock-face web-mode-html-attr-value-face 593 . 594) (nil part-side jsx 580 . 593) (nil jsx-depth 3 580 . 593) (nil tag-attr t 580 . 593) (nil tag-name "image" 580 . 593) (nil tag-type void 580 . 593) (nil font-lock-face web-mode-html-attr-value-face 580 . 593) (nil part-side jsx 576 . 580) (nil jsx-depth 3 576 . 580) (nil tag-attr t 576 . 580) (nil tag-name "image" 576 . 580) (nil tag-type void 576 . 580) (nil font-lock-face web-mode-html-attr-value-face 576 . 580) (nil part-side jsx 560 . 576) (nil jsx-depth 3 560 . 576) (nil tag-attr t 560 . 576) (nil tag-name "image" 560 . 576) (nil tag-type void 560 . 576) (nil font-lock-face web-mode-html-attr-value-face 560 . 576) (nil part-side jsx 555 . 560) (nil jsx-depth 3 555 . 560) (nil tag-attr t 555 . 560) (nil tag-name "image" 555 . 560) (nil tag-type void 555 . 560) (nil font-lock-face web-mode-html-attr-value-face 555 . 560) (nil part-side jsx 549 . 555) (nil jsx-depth 3 549 . 555) (nil tag-attr t 549 . 555) (nil tag-name "image" 549 . 555) (nil tag-type void 549 . 555) (nil font-lock-face web-mode-html-attr-value-face 549 . 555) (nil part-side jsx 548 . 549) (nil jsx-depth 3 548 . 549) (nil tag-attr t 548 . 549) (nil tag-name "image" 548 . 549) (nil tag-type void 548 . 549) (nil font-lock-face web-mode-html-attr-equal-face 548 . 549) (nil part-side jsx 543 . 548) (nil jsx-depth 3 543 . 548) (nil tag-attr t 543 . 548) (nil tag-name "image" 543 . 548) (nil tag-type void 543 . 548) (nil font-lock-face web-mode-html-attr-name-face 543 . 548) (543 . 594)) nil (26473 51538 683381 0) 0 nil])
([nil nil ((#("	" 0 1 (jsx-depth 3 part-side jsx)) . -621) (undo-tree-id11 . -1) 622 (t 26473 51538 686377 773000)) nil (26477 29396 551268 0) 0 nil])
([nil nil ((246 . 251)) nil (26477 29396 551267 0) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -246) (undo-tree-id6 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -247) (undo-tree-id7 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -248) (undo-tree-id8 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -249) (undo-tree-id9 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t jsx-depth 1 part-side jsx)) . -250) (undo-tree-id10 . -1) 251) nil (26477 29396 551265 0) 0 nil])
([nil nil ((246 . 255)) nil (26477 29396 551256 0) 0 nil])
([nil current ((255 . 260)) nil (26477 29396 551253 0) 0 nil])
nil
