(undo-tree-save-format-version . 1)
"a2e31bfa13fa2182bb41dc71c43a01471df71e22"
[nil nil nil nil (26481 27829 601697 0) 0 nil]
([nil nil ((#("export { };

// Create a type for the roles
export type Roles = \"admin\" | \"moderator\";

declare global {
  interface CustomJwtSessionClaims {
    metadata: {
      role?: \"admin\"
    };
  }
}
" 0 6 (face font-lock-keyword-face fontified t) 6 13 (fontified t) 13 16 (face font-lock-comment-delimiter-face fontified t) 16 44 (face font-lock-comment-face fontified t) 44 50 (face font-lock-keyword-face fontified t) 50 51 (fontified t) 51 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-type-face fontified t) 61 64 (fontified t) 64 71 (face font-lock-string-face fontified t) 71 74 (fontified t) 74 85 (face font-lock-string-face fontified t) 85 88 (fontified t) 88 95 (face font-lock-keyword-face fontified t) 95 103 (fontified t) 103 107 (font-lock-multiline t fontified t) 107 116 (font-lock-multiline t face font-lock-keyword-face fontified t) 116 117 (font-lock-multiline t fontified t) 117 139 (face font-lock-type-face font-lock-multiline t fontified t) 139 171 (font-lock-multiline t fontified t) 171 178 (font-lock-multiline t face font-lock-string-face fontified t) 178 191 (font-lock-multiline t fontified t) 191 192 (fontified t)) . 1) (undo-tree-id0 . -192) (t 26024 1535 476838 657000)) nil (26481 27829 601696 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 185 . 186) (nil fontified nil 1 . 186) (1 . 186)) nil (26481 27829 601684 0) 0 nil])
([nil nil ((186 . 187)) nil (26481 27829 601680 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -74) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -75) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -76) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -77) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -78) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -79) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -80) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -81) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -82) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 83 (t 26481 27829 603674 164000)) nil (26481 27846 640133 0) 0 nil])
([nil nil ((74 . 78)) nil (26481 27846 640083 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -74) (undo-tree-id1 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -75) (undo-tree-id2 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -76) (undo-tree-id3 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -77) (undo-tree-id4 . -1) 78) nil (26481 27846 640081 0) 0 nil])
([nil nil ((74 . 80)) nil (26481 27846 640065 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -75) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -76) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -77) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -78) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -79) (undo-tree-id84 . -1) 80 (t 26481 27846 642422 884000)) nil (26481 27857 518959 0) 0 nil])
([nil current ((75 . 83)) nil (26481 27857 518943 0) 0 nil])
nil
